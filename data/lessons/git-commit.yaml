title: "Git Commit"
description: "Learn the basics of staging and committing changes in Git. This lesson will guide you through checking status, adding files, and making your first commit."
category: "changes"
level: "beginner"
time: "10 minutes"
order: 3
steps:
  - id: 1
    title: "Create project files"
    description: "Let's create some files to work with"
    allowedCommands:
      - cmd: "touch README.md .gitignore"
        valid: "^touch\\s+README\\.md\\s+\\.gitignore$"
        output: []
        hint: "The <code>touch</code> command creates empty files. We're creating a <code>README.md</code> for project documentation and a <code>.gitignore</code> to specify which files Git should ignore."
        next: 2
  
  - id: 2
    title: "Check repository status"
    description: "Start by checking the current status of your repository"
    allowedCommands:
      - cmd: "git status"
        valid: "^git\\s+status$"
        output:
          - text: |
              On branch main

              No commits yet

              Untracked files:
                (use "git add <file>..." to include in what will be committed)

              	README.md
              	.gitignore

              nothing added to commit but untracked files present (use "git add" to track)
            hint: "Git <em>status</em> shows we're on the <b>main</b> <i>branch</i> with no <i>commits</i> yet, and have <b>2 untracked files</b> that need to be added to version control."
        hint: "Shows the <strong>working tree status</strong> - which files are <i>tracked</i>, <i>untracked</i>, or <i>staged</i> for commit"
  
  - id: 3
    title: "Add files to staging area"
    description: "Add the files to the staging area using git add"
    allowedCommands:
      - cmd: "git add README.md .gitignore"
        valid: "^git\\s+add\\s+README\\.md\\s+.gitignore$"
        output: []
        hint: "You can <b>add</b> a <i>single file</i> or <i>multiple files</i> at once by separating them with a <code>space</code>"
      - cmd: "git add ."
        valid: "^git\\s+add\\s+\\.$"
        output: []
        hint: "Adds all new and changed files in the current directory and its subdirectories to the <em>staging area</em>.<br><strong>Note:</strong> Does not include deleted files."
      - cmd: "git add -A"
        valid: "^git\\s+add\\s+-A$"
        output: []
        hint: "Adds all changes in the entire <em>working directory</em> to the <em>staging area</em>.<br><strong>Note:</strong> Includes deleted files."
      - cmd: "git add -A && git commit -m \"Initial commit\""
        valid: "^git\\s+add\\s+-A\\s+&&\\s+git\\s+commit\\s+-m\\s*['\"][a-z -_]+['\"]$"
        next: 6
        output:
          - text: |
              [main (root-commit) a1b2c3d] First commit
               2 files changed, 25 insertions(+)\n
               create mode 100644 README.md
               create mode 100644 .gitignore
            hint: "Shows the <i>commit hashes</i> (a1b2c3d), files changed, and that this is the first commit (<em>root-commit</em>) on the <em>main branch</em>"
        hint: "Adds all changes to the <em>staging area</em> including deleted files and creates a <em>commit</em> with the specified <em>commit message</em>"
  
  - id: 4
    title: "Check status after adding"
    description: "Check the status again to see the staged files"
    allowedCommands:
      - cmd: "git status"
        valid: "^git\\s+status$"
        output:
          - text: |
              On branch main

              No commits yet

              Changes to be committed:
                (use "git rm --cached <file>..." to unstage)

              	new file:   README.md
              	new file:   .gitignore
            hint: |
              Now <em>git status</em> shows the list of<i>staged files</i> that will be committed.
  
  - id: 5
    title: "Make your first commit"
    description: "Commit the staged changes with a meaningful message"
    allowedCommands:
      - cmd: "git commit -m \"Initial commit\""
        valid: "^git\\s+commit\\s+-m\\s*['\"][a-z -_]+['\"]$"
        output:
          - text: "[main (root-commit) a1b2c3d] Initial commit\n 2 files changed, 25 insertions(+)\n create mode 100644 README.md\n create mode 100644 .gitignore"
            hint: |
              Shows the <i>commit hash</i> (a1b2c3d), files changed,
              and that this is the first commit (<i>root-commit</i>) on the <i>main branch</i>
        hint: "Creates a commit with the staged changes and the specified commit message"
      - cmd: "git commit -m \"Setup project\""
        valid: "^git\\s+commit\\s+-m\\s*['\"][a-z -_]+['\"]$"
        output:
          - text: "[main (root-commit) a1b2c3d] Setup project\n 2 files changed, 25 insertions(+)\n create mode 100644 README.md\n create mode 100644 .gitignore"
      - cmd: "git commit -m \"First commit\""
        valid: "^git\\s+commit\\s+-m\\s*['\"]first\\s+commit['\"]$"
        output:
          - text: "[main (root-commit) a1b2c3d] First commit\n 2 files changed, 25 insertions(+)\n create mode 100644 README.md\n create mode 100644 .gitignore"
  
  - id: 6
    title: "Verify the commit"
    description: "Check the log to see your commit"
    allowedCommands:
      - cmd: "git log"
        valid: "^git\\s+log$"
        output:
          - text: |
              commit a1b2c3d4e5f6789012345678901234567890abcd (HEAD -> main)
              Author: Sebastian Feldmann <sebastianfeldmann@users.noreply.github.com>
              Date:   Tue Sep 30 20:30:00 2025 +0200

                  Initial commit
      - cmd: "git log --oneline"
        valid: "^git\\s+log\\s+--oneline$"
        output:
          - text: "a1b2c3d (HEAD -> main) Initial commit"
